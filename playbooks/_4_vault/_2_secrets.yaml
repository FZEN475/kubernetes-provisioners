
- name: Create ServiceAccount gitlab-pgsql-sa
  kubernetes.core.k8s:
    state: present
    wait: true
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: "gitlab-pgsql-sa"
        namespace: "secrets"

#- name: Static assess to vault database role gitlab-pgsql-css
#  kubernetes.core.k8s:
#    state: present
#    wait: true
#    definition:
#      apiVersion: external-secrets.io/v1beta1
#      kind: ClusterSecretStore
#      metadata:
#        name: "gitlab-pgsql-css"
#        namespace: "secrets"
#      spec:
#        retrySettings:
#          retryInterval: "10s"
#        provider:
#          vault:
#            server: "https://vault.secrets.svc:8200"
#            version: "v1"
#            namespace: "storage"
#            caProvider:
#              type: "Secret"
#              name: "vault-ca"
#              key: "ca.crt"
#              namespace: "secrets"
#            auth:
#              kubernetes:
#                mountPath: "kubernetes"
#                role: "gitlab-pgsql"
#                # Optional service account reference
#                serviceAccountRef:
#                  name: "gitlab-pgsql-sa"
#                  namespace: "secrets"

- name: secret facts
  ansible.builtin.set_fact:
    pgadmin_secret_data:
      postgres: !unsafe |
        postgresql-primary.storage.svc:5432:*:postgres:{{ .postgres }}
    redis_secret_data:
      redis-password: !unsafe "{{ .redisPassword }}"
      users.acl: !unsafe |
        user default on +@all ~* allchannels >{{ .redisPassword }}
        user gitlab on +@all ~* allchannels >{{ .gitlabRedisPassword }}
    gitlab_minio_secret_data:
      connection: !unsafe |
        provider: "AWS"
        region: "us-east-1"
        aws_access_key_id: "gitlab-sa"
        aws_secret_access_key: "{{ .secretKey }}"
        aws_signature_version: 4
        host: "minio.storage.svc"
        endpoint: "https://minio.storage.svc:9000"
        path_style: true
      registry-config: !unsafe |
        s3:
          accesskey: "gitlab-sa"
          secretkey: "{{ .secretKey }}"
          region: us-east-1
          regionendpoint: https://minio.storage.svc:9000
          bucket: gitlab-registry-storage
          rootdirectory: /
          encrypt: false
          v4auth: true
          secure: true
      toolbox-config: !unsafe |
        s3:
          accesskey: "gitlab-sa"
          secretkey: "{{ .secretKey }}"
          region: us-east-1
          regionendpoint: https://minio.storage.svc:9000
          bucket: gitlab-backups
          rootdirectory: /
          encrypt: false
          v4auth: true
          secure: true
      accesskey: !unsafe "gitlab-sa"
      secretkey: !unsafe "{{ .secretKey }}"
    loki_minio_secret_data:
      AWS_SECRET_ACCESS_KEY: !unsafe "{{ .secretKey }}"
    gitlab_kas_secret_data:
      kas-shared-secret: !unsafe "{{ .kas_shared_secret | b64enc }}"
      kas-private-api: !unsafe "{{ .kas_private_api | b64enc }}"
      kas-websocket-token: !unsafe "{{ .kas_websocket_token | b64enc }}"
    gitlab_rails_secret_data:
      secrets.yml: !unsafe |
        production:
          secret_key_base: {{ .secret_key_base }}
          otp_key_base: {{ .otp_key_base }}
          db_key_base: {{ .db_key_base }}
          encrypted_settings_key_base: {{ .encrypted_settings_key_base }}
          openid_connect_signing_key: |
            {{ .openid_connect_signing_key | b64dec }}
          active_record_encryption_primary_key: {{ .active_record_encryption_primary_key }}
          active_record_encryption_deterministic_key: {{ .active_record_encryption_deterministic_key }}
          active_record_encryption_key_derivation_salt: {{ .active_record_encryption_key_derivation_salt }}
      suggested-reviewers: !unsafe "{{ .suggested_reviewers }}"
    gitlab_secret_data:
      password: !unsafe "{{ .password }}"
      workhorse: !unsafe "{{ .workhorse | b64enc }}"
    registry_secret_data:
      .dockerconfigjson: !unsafe |
        {{- define "makeServiceNamespace" }}
          {{- $A := 1 }}
          {{- if eq $A 1 }}
            {{- printf "%s:%s" .username .password | b64enc -}}
          {{- else }}
            {{- print .username -}}
          {{- end }}
        {{- end }}
        {"auths":{"https://{{ .host }}/v2/":{"username":"{{ .username }}","password":"{{ .password }}","email":"admin@fzen.pro","auth":"{{- template "makeServiceNamespace" . -}}"}}}
    pages_secret_data:
      secret: !unsafe "{{ .secret | b64enc }}"
    runner_github_secret_data:
      github_ed25519: !unsafe "{{ .github_ed2551 | b64enc }}"
      config: |
        Host github.com
        HostName github.com
        User git
        IdentityFile /tmp/github/github_ed25519
    runner_gitlab_registry_secret_data:
      .dockerconfigjson: !unsafe |
        {"auths":{"https://registry.fzen.pro/v2/":{"username":"root","password":"{{ .registry_token }}","email":"admin@fzen.pro","auth":"{{- printf "root:%s" .registry_token | b64enc -}}"}}}

- name: Gitlab secrets
  ansible.builtin.set_fact:
    gitlab_secrets: "{{ lookup('ansible.builtin.file', '/run/secrets/gitlab-secrets.yaml')   }}"

- name: secret facts
  ansible.builtin.set_fact:
    secrets:
## /////////////////////// grafana //////////////////////
#      - { ns: "monitoring", resource: "grafana",
#          list: [
#            { "vault": true, "key": "adminUser", "value": "admin" },
#            { "vault": true, "key": "adminPassword", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}" }
#          ]}
## //////////////////////////////////////////////////////
## /////////////////////// minio ////////////////////////
#      - { ns: "storage", resource: "minio",
#          list: [
#            { "vault": true, "key": "rootUser", "value": "root" },
#            { "vault": true, "key": "rootPassword", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}" }
#          ]}
#      - { ns: "storage", resource: "minio",
#          secret_name: "minio-gitlab-secrets", cluster_access: true,
#          list: [
#            { "vault": true, "key": "secretKey", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase','ascii_uppercase', 'digits'], length=40) }}" },
#            { "vault": true, "key": "gitlabPassword", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase','ascii_uppercase', 'digits'], length=15) }}" }
#          ]}
#      - { ns: "storage", resource: "minio",
#          secret_name: "minio-loki-secrets", cluster_access: true,
#          list: [
#            { "vault": true, "key": "secretKey", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase','ascii_uppercase', 'digits'], length=40) }}" },
#            { "vault": true, "key": "lokiPassword", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase','ascii_uppercase', 'digits'], length=15) }}" }
#          ]}
#      - { ns: "gitlab", resource: "minio", sa: "gitlab-sa", secret_name: "gitlab-minio-secrets",
#          store_name: "storage-minio-css", cluster_access: true, data: "{{ gitlab_minio_secret_data }}",
#          list: [
#            { "key": "secretKey", "path": "storage/minio/minio-gitlab-secrets" }
#          ]}
#      - { ns: "monitoring", resource: "minio", sa: "loki-sa", secret_name: "loki-minio-secrets",
#          store_name: "storage-minio-css", cluster_access: true, data: "{{ loki_minio_secret_data }}",
#          list: [
#            { "key": "secretKey", "path": "storage/minio/minio-loki-secrets" }
#          ]}
## /////////////////////////////////////////////////////
## ////////////////// pgadmin + pgsql //////////////////
#      - { ns: "storage", resource: "pgsql",
#          list: [
#            { "vault": true, "key": "postgres-password", "value": "{{ lookup('ansible.builtin.file', '/run/secrets/pgsql_password') }}" },
#            { "vault": true, "key": "replication-password", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}" }
#          ]}
#      - { ns: "storage", resource: "pgsql", secret_name: "pgadmin-pgsql-secrets", data: "{{ pgadmin_secret_data }}",
#          list: [
#            { "secretKey": "postgres", "key": "postgres-password", "path": "storage/pgsql/pgsql-secrets" }
#          ]}
#      - { ns: "storage", resource: "pgadmin", sa: "pgadmin4",
#          list: [
#            { "vault": true, "key": "password", "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}" }
#          ]}
#      - { ns: "gitlab", resource: "pgsql", sa: "gitlab-sa", secret_name: "gitlab-pgsql-secrets",
#          store_name: "gitlab-pgsql-css", cluster_access: true,
#          list: [
#            { "key": "password", "path": "database/static-creds/gitlab" }
#          ]}
## /////////////////////////////////////////////////////
## /////////////////////// redis ////////////////////////
#      - { ns: "storage", resource: "redis", data: "{{ redis_secret_data }}",
#          list: [
#            { "vault": true, "key": "redis-password",
#              "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}",
#              "secretKey": "redisPassword"},
#            { "secretKey": "gitlabRedisPassword", "key": "gitlab-redis-password", "path": "storage/redis/redis-clients-secrets" },
#          ]}
#      - { ns: "storage", resource: "redis", secret_name: "redis-clients-secrets", cluster_access: true,
#          list: [
#            { "vault": true, "key": "gitlab-redis-password",
#              "value": "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_lowercase', 'digits'], length=8) }}" }
#          ]}
#      - { ns: "gitlab", resource: "redis", sa: "gitlab-sa", secret_name: "gitlab-redis-secrets",
#          store_name: "storage-redis-css", cluster_access: true,
#          list: [
#            { "secretKey": "gitlab-redis-password", "key": "redis-password", "path": "storage/redis/redis-secrets" }
#          ]}
## /////////////////////////////////////////////////////
## ////////////////////// gitlab //////////////////////
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "kas-secrets", data: "{{ gitlab_kas_secret_data }}",
#          list: [
#            { "vault": true, "key": "kas_shared_secret", "value": "{{ gitlab_secrets.kas_secrets.kas_shared_secret }}" },
#            { "vault": true, "key": "kas_private_api", "value": "{{ gitlab_secrets.kas_secrets.kas_private_api }}" },
#            { "vault": true, "key": "kas_websocket_token", "value": "{{ gitlab_secrets.kas_secrets.kas_websocket_token }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "rails-secrets", data: "{{ gitlab_rails_secret_data }}",
#          list: [
#            { "vault": true, "key": "secret_key_base", "value": "{{ gitlab_secrets.rails_secrets.secret_key_base }}" },
#            { "vault": true, "key": "otp_key_base", "value": "{{ gitlab_secrets.rails_secrets.otp_key_base }}" },
#            { "vault": true, "key": "db_key_base", "value": "{{ gitlab_secrets.rails_secrets.db_key_base }}" },
#            { "vault": true, "key": "encrypted_settings_key_base", "value": "{{ gitlab_secrets.rails_secrets.encrypted_settings_key_base }}" },
#            { "vault": true, "key": "openid_connect_signing_key", "value": "{{ gitlab_secrets.rails_secrets.openid_connect_signing_key | b64decode | replace('\n','\n    ') | b64encode }}" },
#            { "vault": true, "key": "active_record_encryption_primary_key", "value": "{{ gitlab_secrets.rails_secrets.active_record_encryption_primary_key }}" },
#            { "vault": true, "key": "active_record_encryption_deterministic_key", "value": "{{ gitlab_secrets.rails_secrets.active_record_encryption_deterministic_key }}" },
#            { "vault": true, "key": "active_record_encryption_key_derivation_salt", "value": "{{ gitlab_secrets.rails_secrets.active_record_encryption_key_derivation_salt }}" },
#            { "vault": true, "key": "suggested_reviewers", "value": "{{ gitlab_secrets.rails_secrets.suggested_reviewers }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "gitlab-secrets", data: "{{ gitlab_secret_data }}",
#          list: [
#            { "vault": true, "key": "password", "value": "{{ gitlab_secrets.gitlab_secrets.password }}" },
#            { "vault": true, "key": "workhorse", "value": "{{ gitlab_secrets.gitlab_secrets.workhorse }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "gitaly-secrets",
#          list: [
#            { "vault": true, "key": "token", "value": "{{ gitlab_secrets.gitaly_secrets.token }}" },
#            { "vault": true, "key": "token-shell", "value": "{{ gitlab_secrets.gitaly_secrets.token_shell }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "registry-secrets",
#          list: [
#            { "vault": true, "key": "httpSecret", "secretKey": "httpSecret", "value": "{{ gitlab_secrets.registry_secrets.httpSecret }}" },
#            { "vault": true, "key": "notification", "secretKey": "notification", "value": "{{ gitlab_secrets.registry_secrets.notification }}" },
#            { "vault": true, "key": "host", "value": "{{ gitlab_secrets.registry_secrets.host }}" },
#            { "vault": true, "key": "username", "value": "{{ gitlab_secrets.registry_secrets.username }}" },
#            { "vault": true, "key": "password", "value": "{{ gitlab_secrets.registry_secrets.password }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "registry-connect-secrets",
#          data: "{{ registry_secret_data }}", es_type: "kubernetes.io/dockerconfigjson",
#          list: [
#            { "key": "host", "path": "gitlab/gitlab/registry-secrets" },
#            { "key": "username", "path": "gitlab/gitlab/registry-secrets" },
#            { "key": "password", "path": "gitlab/gitlab/registry-secrets" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "pages-secrets", data: "{{ pages_secret_data }}",
#          list: [
#            { "vault": true, "key": "secret", "value": "{{ gitlab_secrets.pages_secrets.secret }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "runner-secrets",
#          list: [
#            { "vault": true, "key": "runner-registration-token",
#              "value": "{{ gitlab_secrets.runner_secrets.runner_registration_token }}" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "shell-secrets",
#          list: [
#            { "vault": true, "secretKey": "ssh_host_ed25519_key.pub", "key": "id_ed25519",
#              "value": "{{ lookup('ansible.builtin.file', '/run/secrets/id_ed25519') | b64encode }}" },
#            { "vault": true, "secretKey": "ssh_host_ed25519_key", "key": "id_ed25519.pub", decodingStrategy: "Base64",
#              "value": "{{ lookup('ansible.builtin.file', '/run/secrets/id_ed25519') | b64encode }}" }
#          ]}
## /////////////////////////////////////////////////////
## ////////////////////// runners //////////////////////
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "runners-secrets",
#          list: [
#            { "vault": true, "key": "runner-no-tag-registration-token", "value": "" },
#            { "vault": true, "key": "runner-no-tag-token", "value": "" },
#            { "vault": true, "key": "runner-docker-builder-registration-token", "value": "" },
#            { "vault": true, "key": "runner-docker-builder-token", "value": "" },
#            { "vault": true, "key": "runner-git-registration-token", "value": "" },
#            { "vault": true, "key": "runner-git-token", "value": "" }
#            { "vault": true, "key": "runner-helm-registration-token", "value": "" },
#            { "vault": true, "key": "runner-helm-token", "value": "" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "runner-no-tag-secrets",
#          list: [
#            { "secretKey": "runner-registration-token", "key": "runner-no-tag-registration-token", "path": "gitlab/gitlab/runners-secrets" },
#            { "secretKey": "runner-token", "key": "runner-no-tag-token", "path": "gitlab/gitlab/runners-secrets" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "runner-docker-builder-secrets",
#          list: [
#            { "secretKey": "runner-registration-token", "key": "runner-docker-builder-registration-token", "path": "gitlab/gitlab/runners-secrets" },
#            { "secretKey": "runner-token", "key": "runner-docker-builder-token", "path": "gitlab/gitlab/runners-secrets" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "runner-helm-secrets",
#          list: [
#            { "secretKey": "runner-registration-token", "key": "runner-helm-registration-token", "path": "gitlab/gitlab/runners-secrets" },
#            { "secretKey": "runner-token", "key": "runner-helm-token", "path": "gitlab/gitlab/runners-secrets" }
#          ]}
#      - { ns: "gitlab", resource: "gitlab", sa: "gitlab-sa", secret_name: "runner-gitlab-registry-secrets",
#          data: "{{ runner_gitlab_registry_secret_data }}", es_type: "kubernetes.io/dockerconfigjson",
#          list: [
#            { "vault": true, "key": "registry_token", "value": "" }
#          ]}
## /////////////////////////////////////////////////////
## ////////////////////// agents //////////////////////
#      - { ns: "dev", resource: "gitlab-agent", sa: "gitlab-agent-sa", secret_name: "gitlab-agent-secrets",
#          list: [
#            { "vault": true, "key": "token", "value": "" }
#          ]}
#      - { ns: "prod", resource: "gitlab-agent", sa: "gitlab-agent-sa", secret_name: "gitlab-agent-secrets",
#          list: [
#            { "vault": true, "key": "token", "value": "" }
#          ]}
## /////////////////////////////////////////////////////
# ////////////////////// AlertManager //////////////////////
      - { ns: "monitoring", resource: "alert-manager", sa: "alert-manager-sa", secret_name: "alert-manager-secrets",
          list: [
            { "vault": true, "key": "bot-token", "value": "" },
            { "vault": true, "key": "chat-id", "value": "" }
          ]}


- name: Create secrets in Vault
  ansible.builtin.include_tasks: /source/playbooks/library/vault/add_vault_secret.yaml
  vars:
    ns: "{{ item.ns }}"
    resource: "{{ item.resource }}"
    secret_name: "{{ item.secret_name }}"
    cluster_access: "{{ item.cluster_access }}"
    sa: "{{ item.sa }}"
    store_name: "{{ item.store_name }}"
    list: "{{ item.list }}"
    data: "{{ item.data }}"
    es_type: "{{ item.es_type }}"
  with_items: "{{ secrets }}"

